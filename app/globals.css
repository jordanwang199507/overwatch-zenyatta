@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #2f2f2f;
  --primary: #f7c40d;
  --secondary: #ce3d14;
  --tertiary: #696969;
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: Arial, Helvetica, sans-serif;
  background-image: repeating-linear-gradient(
      to right,
      transparent 0 100px,
      #fffefe1d 100px 101px
    ),
    repeating-linear-gradient(
      to bottom,
      transparent 0 100px,
      #fffefe1d 100px 101px
    );
}

section h1.zenyatta::after {
  position: absolute;
  inset: 0 0 0 0;
  content: attr(data-content);
  z-index: 2;
  -webkit-text-stroke: 1px #d2d2d2;
  color: transparent;
}

.model {
  background-image: url(/images/zenyatta.png);
  width: 100%;
  height: 75vh;
  position: absolute;
  top: -1000px;
  left: 0;
  background-size: auto 100%;
  background-repeat: no-repeat;
  background-position: top center;
  z-index: 1;
}
.slider {
  @apply absolute w-[250px] h-[250px] flex items-center justify-center top-1/3;
  transform: perspective(1000px);
  left: calc(50% - 120px);
  transform-style: preserve-3d;
  animation: autoRunSlider 20s linear infinite;
  z-index: 0;
}

.orbeslider {
  @apply absolute w-[100px] h-[100px] flex items-center justify-center top-2/4;
  transform: perspective(1000px);
  left: calc(50% - 50px);
  transform-style: preserve-3d;
  animation: autoRun 20s linear infinite;
  z-index: 1;
}
@keyframes autoRun {
  from {
    transform: perspective(1000px) rotateX(-16deg) rotateY(0deg);
  }
  to {
    transform: perspective(1000px) rotateX(-16deg) rotateY(360deg);
  }
}
@keyframes autoRunSlider {
  from {
    transform: perspective(1000px) rotateX(-10deg) rotateY(0deg);
  }
  to {
    transform: perspective(1000px) rotateX(-10deg) rotateY(360deg);
  }
}
.orbeslider .orbe {
  @apply absolute inset-0;
  /* Use CSS variables for 3D rotation and translation */
  transform: rotateY(
      calc((var(--orbeposition) - 1) * (360 / var(--orbequantity)) * 1deg)
    )
    translateZ(350px);
}
.slider .item {
  @apply absolute inset-0;
  /* Use CSS variables for 3D rotation and translation */
  transform: rotateY(
      calc((var(--position) - 1) * (360 / var(--quantity)) * 1deg)
    )
    translateZ(650px);
}
.orbeslider .orbe img {
  @apply w-full h-full object-cover;
}
